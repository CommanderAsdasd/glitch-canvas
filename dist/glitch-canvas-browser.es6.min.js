function glitch(t){function a(){return t}function e(){const t=objectAssign({},w);return l||objectAssign(t,I),t}function n(){const t=objectAssign({},w);return b||objectAssign(t,y),t}function s(t){return t}function i(t){return u(imageToImageData,t)}function r(t){return u(s,t)}function o(t){return g(s)}function c(t){return g(base64URLToImage,t,!0)}function h(t){return g(base64URLToImageData,t,!0)}function u(t,a,e){return l=(()=>new Promise((n,i)=>{if(e)t(a,n,i);else if(t===s)n(a);else try{n(t(a,n,i))}catch(t){i(t)}})),f()?m():n()}function g(t,a,n){return b=(e=>new Promise((i,r)=>{n?t(e,a,i,r):t===s?i(e):t(e,a).then(i,r)})),f()?m():e()}function f(){return l&&b}function m(){return new Promise((a,e)=>{l().then(a=>d(a,t),e).then(t=>{b(t).then(a,e)},e)})}function d(t,a){return new Promise((e,n)=>{imageDataToBase64(t,a.quality).then(e=>p(t,e,a),n).then(e,n)})}function p(t,a,e){return new Promise((n,s)=>{v.addEventListener("message",t=>{t.data&&t.data.base64URL?n(t.data.base64URL):s(t.data&&t.data.err?t.data.err:t)});v.postMessage({params:e,base64URL:a,imageData:t,imageDataWidth:t.width,imageDataHeight:t.height})})}t=sanitizeInput(t);let l,b;const v=new Worker(URL.createObjectURL(new Blob(['function fail(a){self.postMessage({err:a.message||a})}function success(a){self.postMessage({base64URL:a})}var isImageData=function(a){return a&&"number"==typeof a.width&&"number"==typeof a.height&&a.data&&"number"==typeof a.data.length&&"object"==typeof a.data};const base64Chars="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",base64Map=base64Chars.split(""),reversedBase64Map$1={};base64Map.forEach((a,e)=>{reversedBase64Map$1[a]=e});var maps={base64Map:base64Map,reversedBase64Map:reversedBase64Map$1};const reversedBase64Map=maps.reversedBase64Map;var base64ToByteArray=function(a){const e=[];let s;for(var t=23,r=a.length;t<r;t++){const r=reversedBase64Map[a.charAt(t)],n=(t-23)%4;switch(n){case 1:e.push(s<<2|r>>4);break;case 2:e.push((15&s)<<4|r>>2);break;case 3:e.push((3&s)<<6|r)}s=r}return e},jpgHeaderLength=function(a){let e=417;for(var s=0,t=a.length;s<t;s++)if(255===a[s]&&218===a[s+1]){e=s+2;break}return e},glitchByteArray=function(a,e,s,t){const r=jpgHeaderLength(a),n=a.length-r-4,i=s/100,o=e/100;for(var c=0;c<t;c++){const e=n/t*c|0,s=n/t*(c+1)|0,p=s-e;let h=e+p*o|0;h>n&&(h=n);const g=~~(r+h);a[g]=~~(256*i)}return a};const base64Map$1=maps.base64Map;var byteArrayToBase64=function(a){const e=["data:image/jpeg;base64,"];let s,t;for(var r=0,n=a.length;r<n;r++){const n=a[r];switch(s=r%3){case 0:e.push(base64Map$1[n>>2]);break;case 1:e.push(base64Map$1[(3&t)<<4|n>>4]);break;case 2:e.push(base64Map$1[(15&t)<<2|n>>6]),e.push(base64Map$1[63&n])}t=n}return 0===s?(e.push(base64Map$1[(3&t)<<4]),e.push("==")):1===s&&(e.push(base64Map$1[(15&t)<<2]),e.push("=")),e.join("")},glitchImageData=function(a,e,s){if(isImageData(a)){const a=base64ToByteArray(e),t=glitchByteArray(a,s.seed,s.amount,s.iterations),r=byteArrayToBase64(t);return r}throw new Error("glitchImageData: imageData seems to be corrupt.")};onmessage=(a=>{const e=a.data.imageData;const s=a.data.params;const t=a.data.base64URL;if(e&&t&&s)try{void 0===e.width&&"number"==typeof a.data.imageDataWidth&&(e.width=a.data.imageDataWidth),void 0===e.height&&"number"==typeof a.data.imageDataHeight&&(e.height=a.data.imageDataHeight);const r=glitchImageData(e,t,s);success(r)}catch(a){fail(a)}else fail(a.data.imageData?"Parameters are missing.":"ImageData is missing.");self.close()});'],{type:"text/javascript"}))),w={getParams:a,getInput:e,getOutput:n},I={fromImageData:r,fromImage:i},y={toImage:c,toDataURL:o,toImageData:h};return e()}var clamp=function(t,a,e){return t<a?a:t>e?e:t},clone=function(t){let a=!1;if(void 0!==t)try{a=JSON.parse(JSON.stringify(t))}catch(t){}return a},defaultParams={amount:35,iterations:20,quality:30,seed:25},sanitizeInput=function(t){return"object"!=typeof(t=clone(t))&&(t={}),Object.keys(defaultParams).filter(t=>"iterations"!==t).forEach(a=>{"number"!=typeof t[a]||isNaN(t[a])?t[a]=defaultParams[a]:t[a]=clamp(t[a],0,100);t[a]=Math.round(t[a])}),("number"!=typeof t.iterations||isNaN(t.iterations)||t.iterations<=0)&&(t.iterations=defaultParams.iterations),t.iterations=Math.round(t.iterations),t};class Canvas$1{constructor(t=300,a=150){this.canvasEl=document.createElement("canvas"),this.canvasEl.width=t,this.canvasEl.height=a,this.ctx=this.canvasEl.getContext("2d")}getContext(){return this.ctx}toDataURL(t,a,e){if("function"!=typeof e)return this.canvasEl.toDataURL(t,a);e(this.canvasEl.toDataURL(t,a))}get width(){return this.canvasEl.width}set width(t){this.canvasEl.width=t}get height(){return this.canvasEl.height}set height(t){this.canvasEl.height=t}}Canvas$1.Image=Image;var imageToImageData=function(t){if(t instanceof HTMLImageElement){if(!t.naturalWidth||!t.naturalHeight||!1===t.complete)throw new Error("This this image hasn't finished loading: "+t.src);const a=new Canvas$1(t.naturalWidth,t.naturalHeight),e=a.getContext("2d");e.drawImage(t,0,0,a.width,a.height);const n=e.getImageData(0,0,a.width,a.height);return n.data&&n.data.length&&(void 0===n.width&&(n.width=t.naturalWidth),void 0===n.height&&(n.height=t.naturalHeight)),n}throw new Error("This object does not seem to be an image.")};const Image$2=Canvas$1.Image;var loadBase64Image=function(t){return new Promise((a,e)=>{const n=new Image$2;n.onload=(()=>{a(n)});n.onerror=(t=>{e(t)});n.src=t})},base64URLToImage=function(t,a,e,n){loadBase64Image(t).then(e,n)},getImageSize=function(t){return{width:t.width||t.naturalWidth,height:t.height||t.naturalHeight}},canvasFromImage=function(t){const a=getImageSize(t),e=new Canvas$1(a.width,a.height),n=e.getContext("2d");return n.drawImage(t,0,0,a.width,a.height),{canvas:e,ctx:n}},base64URLToImageData=function(t,a,e,n){loadBase64Image(t).then(t=>{const a=getImageSize(t);const n=canvasFromImage(t).ctx.getImageData(0,0,a.width,a.height);n.width||(n.width=a.width);n.height||(n.height=a.height);e(n)},n)},isImageData=function(t){return t&&"number"==typeof t.width&&"number"==typeof t.height&&t.data&&"number"==typeof t.data.length&&"object"==typeof t.data},imageDataToBase64=function(t,a){return new Promise((e,n)=>{if(isImageData(t)){const n=new Canvas$1(t.width,t.height),s=n.getContext("2d");s.putImageData(t,0,0);const i=n.toDataURL("image/jpeg",a/100);e(i)}else n(new Error("object is not valid imageData"))})};const base64Chars="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",base64Map=base64Chars.split("");base64Map.forEach((t,a)=>{});var objectAssign=Object.assign;export default glitch;